############################### DEFAULT #####################################
# Chain ID
CHAIN_ID=167009

# Exposed ports
PORT_L2_EXECUTION_ENGINE_HTTP=8547
PORT_L2_EXECUTION_ENGINE_WS=8548
PORT_L2_EXECUTION_ENGINE_METRICS=6060
PORT_L2_EXECUTION_ENGINE_P2P=30306
PORT_PROVER_SERVER=9876
PORT_PROMETHEUS=9091
PORT_GRAFANA=3001
# Comma-separated profiles to be used by default (l2_execution_engine,proposer,prover)
COMPOSE_PROFILES=l2_execution_engine

# Comma separated L2 execution engine bootnode URLs for P2P discovery bootstrap
BOOT_NODES=enode://2f7ee605f84362671e7d7c6d47b69a3358b0d87e9ba4648befcae8b19453275ed19059db347c459384c1a3e5486419233c06bf6c4c6f489d81ace6f301a2a446@43.153.55.134:30303,enode://c067356146268d2855ad356c1ce36ba9f78c1633a72f9b7f686679c2ffe04bab6d24e48ef6eefb0e01aa00dff5024f7f94bc583da90b6027f40be4129bbbc5fd@43.153.90.191:30303,enode://acc2bdb6416feddff9734bee1e6de91e684e9df5aeb1d36698cc78b920600aed36a2871e4ad0cf4521afcdc2cde8e2cd410a57038767c356d4ce6c69b9107a5a@170.106.109.12:30303,enode://eb5079aae185d5d8afa01bfd2d349da5b476609aced2b57c90142556cf0ee4a152bcdd724627a7de97adfc2a68af5742a8f58781366e6a857d4bde98de6fe986@34.66.210.65:30303,enode://2294f526cbb7faa778192289c252307420532191438ce821d3c50232e019a797bda8c8f8541de0847e953bb03096123856935e32294de9814d15d120131499ba@34.72.186.213:30303

# Taiko protocol contract addresses
TAIKO_L1_ADDRESS=0x79C9109b764609df928d16fC4a91e9081F7e87DB
TAIKO_TOKEN_L1_ADDRESS=0x6490E12d480549D333499236fF2Ba6676C296011
TAIKO_L2_ADDRESS=0x1670090000000000000000000000000000010001

# P2P
DISABLE_P2P_SYNC=false
P2P_SYNC_URL=https://rpc.hekla.taiko.xyz

############################### REQUIRED #####################################
# L1 Holesky RPC endpoints (you will need an RPC provider such as BlockPi, or run a full Holesky node yourself).
# If you are using a local Holesky L1 node, you can refer to it as "http://host.docker.internal:8545" and "ws://host.docker.internal:8546", which refer to the default ports in the .env for an eth-docker L1 node.
# However, you may need to add this host to docker-compose.yml. If that does not work, you can try the private local ip address (e.g. http://192.168.1.15:8545). You can find that with `ip addr show` or a similar command.
# In addition, you can use your public ip address followed by the specific ports for http and ws (e.g. http://82.168.1.15:8545). You can find that with `hostname -I | awk '{print $1}'`.
L1_ENDPOINT_WS=
# HTTP RPC endpoint of a L1 beacon node. Everything behind the top-level domain is ignored. Make sure you don't need to work with subdirectories. The path will always be /eth/v1...
# If you are using a local Holesky L1 node, you can refer to it as "http://host.docker.internal:5052", which refer to the default REST port in the .env for an eth-docker L1 node.
# Or follow the recommendations for http RPC endoint using the default REST port "5052", (e.g. http://82.168.1.15:5052).
L1_BEACON_HTTP=

############################### OPTIONAL #####################################
# If you want to be a prover who generates and submits zero knowledge proofs of proposed L2 blocks, you need to change
# `ENABLE_PROVER` to true and set `L1_PROVER_PRIVATE_KEY`.
ENABLE_PROVER=false
# SGX Raiko service endpoint, required if not running a guardian prover.
SGX_RAIKO_HOST=
# How many provers you want to run concurrently.
PROVER_CAPACITY=1
# A L1 account private key (with a balance of TTKOh deposited on TaikoL1) which will be used to sign the bond for proving the block.
# WARNING: only use a test account, pasting your private key in plain text here is not secure.
L1_PROVER_PRIVATE_KEY=
# Amount to approve TaikoL1 contracts for TaikoToken usage. i.e 250 TTKOh = 250
TOKEN_ALLOWANCE=
# Minimum ETH balance (in ETH) a prover wants to keep.
MIN_ETH_BALANCE=
# Minimum Taiko token balance (in ether) a prover wants to keep. i.e 250 TTKOh = 250
MIN_TAIKO_BALANCE=
# Whether to prove unassigned blocks or not (blocks that have expired their proof window
# without the original prover submitting a proof.).
PROVE_UNASSIGNED_BLOCKS=false

# If you want to be a proposer who proposes L2 execution engine's transactions in mempool to Taiko L1 protocol
# contract (be a "mining L2 node"), you need to change `ENABLE_PROPOSER` to true, then fill `L1_PROPOSER_PRIVATE_KEY`.
ENABLE_PROPOSER=false
# A L1 account (with balance) private key who will send TaikoL1.proposeBlock transactions.
L1_PROPOSER_PRIVATE_KEY=
# Address of the proposed block's suggested L2 fee recipient.
L2_SUGGESTED_FEE_RECIPIENT=
# Comma-delineated list (no spaces) of prover endpoints proposer should query when attempting to propose a block
# If you keep this default value you must also enable a prover by setting ENABLE_PROVER=true.
# Whether to send EIP-4844 blob transactions when proposing blocks.
BLOB_ALLOWED=true
# Minimum tip (in GWei) for a transaction to propose.
EPOCH_MIN_TIP=
# ProverSet Address: We highly recommend you consult the deploy a proverset guide and use separate EOAs for prover and proposer to prevent nonce issues.
PROVER_SET=

# Comma-delimited local tx pool addresses you want to prioritize, useful to set your proposer to only propose blocks with your prover's transactions.
TXPOOL_LOCALS=

# Transaction Manager Flags (Leave blank if using default values.) These only affect Prover and Proposer.
TX_FEE_LIMIT_MULTIPLIER=
TX_FEE_LIMIT_THRESHOLD=
TX_GAS_LIMIT=
TX_MIN_BASEFEE=
TX_MIN_TIP_CAP=
TX_NOT_IN_MEMPOOL=
TX_NUM_CONFIRMATIONS=
TX_RECEIPT_QUERY=
TX_RESUBMISSION=
TX_SAFE_ABORT_NONCE_TOO_LOW=
TX_SEND_TIMEOUT=
