############################### DEFAULT #####################################
# Chain ID
CHAIN_ID=167012

# Exposed ports
PORT_L2_EXECUTION_ENGINE_HTTP=8547
PORT_L2_EXECUTION_ENGINE_WS=8548
PORT_L2_EXECUTION_ENGINE_METRICS=6060
PORT_L2_EXECUTION_ENGINE_P2P=30306
PORT_PROVER_SERVER=9876
PORT_PROMETHEUS=9091
PORT_GRAFANA=3001
# Comma-separated profiles to be used by default (l2_execution_engine,prover)
# Proposer is deprecated for community as of Tolba Based Preconfs, so profile has been removed.
COMPOSE_PROFILES=l2_execution_engine

# Comma separated L2 execution engine bootnode URLs for P2P discovery bootstrap
BOOT_NODES=enode://eb5079aae185d5d8afa01bfd2d349da5b476609aced2b57c90142556cf0ee4a152bcdd724627a7de97adfc2a68af5742a8f58781366e6a857d4bde98de6fe986@34.44.53.195:30303,enode://b054002f068f30568aad39271462c053463edb4a3d3c19b71b475fa044805d7e2fda39c482eba183f9d1f76fb579a8e47c0c054bb819c2bbcb331c0aac7464c2@34.27.167.246:30303

# Taiko protocol contract addresses
TAIKO_INBOX_ADDRESS=0x50A576435E2D9c179124D657d804eb56A10b6999
TAIKO_TOKEN_L1_ADDRESS=0xf3b83e226202ECf7E7bb2419a4C6e3eC99e963DA
PRECONFIRMATION_WHITELIST=0x83AE31678B9f255346Af4636B4726A84c3bD2886
TAIKO_ANCHOR_ADDRESS=0x1670120000000000000000000000000000010001

# Node Verbosity
VERBOSITY=3

# P2P
DISABLE_P2P_SYNC=false
P2P_SYNC_URL=https://rpc.tolba.taiko.xyz

## Driver configs for preconfirmations
# Enable preconfs p2p network, defaults to true. If set to false, your node will NOT join the P2P network and receive preconf blocks.
ENABLE_PRECONFS_P2P=true
# IP address where your node can be reached which will be used to join the P2P network and received preconfirmation blocks
PUBLIC_IP=
# TCP Port used for discovery on the p2p network, it MUST be open and external and accessible via the same IP address as the public IP.
P2P_TCP_PORT=4001
# UDP Port used for discovery on the p2p network, it MUST be open and external and accessible via the same IP address as the public IP.
P2P_UDP_PORT=30303
# You may have to configure port forwarding rules in your firewall/router: if so, simply add rules for the above ports.
# Private Keys for Peer ID: One must be set to persist your peer ID.
# This private key does not need to hold eth or any valuables, it is simply to persist an identity
# PRIV_RAW is the hexstring private key in plaintext.
PRIV_RAW=
# PRIV_FILE is the name of your txt file that consists entirely of a private key with no newlines IN YOUR /script/ DIRECTORY.
# We recommend you default to privkey.txt, as it is in the .gitignore.
PRIV_FILE=

############################### REQUIRED #####################################
# L1 Hoodi RPC endpoints (you will need an RPC provider such as BlockPi, or run a full Hoodi node yourself).
# If you are using a local Hoodi L1 node, you can refer to it as "http://host.docker.internal:8545" and "ws://host.docker.internal:8546", which refer to the default ports in the .env for an eth-docker L1 node.
# However, you may need to add this host to docker-compose.yml. If that does not work, you can try the private local ip address (e.g. http://192.168.1.15:8545). You can find that with `ip addr show` or a similar command.
# In addition, you can use your public ip address followed by the specific ports for http and ws (e.g. http://82.168.1.15:8545). You can find that with `hostname -I | awk '{print $1}'`.
L1_ENDPOINT_WS=
# HTTP RPC endpoint of a L1 beacon node. Everything behind the top-level domain is ignored. Make sure you don't need to work with subdirectories. The path will always be /eth/v1...
# If you are using a local Hoodi L1 node, you can refer to it as "http://host.docker.internal:5052", which refer to the default REST port in the .env for an eth-docker L1 node.
# Or follow the recommendations for http RPC endoint using the default REST port "5052", (e.g. http://82.168.1.15:5052).
L1_BEACON_HTTP=

